# ============================================================================
# Contact Form - Production Environment Configuration
# ============================================================================
# 
# @version     3.0.0
# @date        2025-10-06
# @repository  https://github.com/JoZapf/contact-form-abuse-prevention
# 
# SECURITY WARNING: Never commit the actual .env.prod file to version control!
# This is only a template. Copy this file to .env.prod and fill in your values.
#
# Setup Instructions:
# 1. Copy this file: cp .env.prod.example.v3 .env.prod
# 2. Fill in all values below with your actual credentials
# 3. Protect the file: chmod 600 .env.prod
# 4. Verify: The .htaccess file should block access to .env files
#
# ============================================================================

# ----------------------------------------------------------------------------
# EMAIL RECIPIENT CONFIGURATION
# ----------------------------------------------------------------------------
# The email address that will receive contact form submissions
# Example: admin@yourdomain.com, contact@company.de, hello@example.com
# 
RECIPIENT_EMAIL=admin@yourdomain.com


# ----------------------------------------------------------------------------
# SMTP SERVER CONFIGURATION
# ----------------------------------------------------------------------------
# Your mail server settings for sending emails via SMTP
# Most hosting providers offer SMTP access - check your hosting control panel
# Common providers: Hetzner, IONOS, Gmail (App Password required), Office365

# SMTP Host
# Examples: 
#   - Hetzner: mail.your-server.de
#   - IONOS: smtp.ionos.de
#   - Gmail: smtp.gmail.com
#   - Office365: smtp.office365.com
SMTP_HOST=mail.yourdomain.com

# SMTP Port
# Common ports:
#   - 587 (recommended) = TLS/STARTTLS encryption
#   - 465 = SSL/TLS encryption (legacy, but still widely used)
#   - 25 = No encryption (NOT recommended, may be blocked)
# 
# Choose ONE port (remove the other):
SMTP_PORT=587

# SMTP Security Protocol
# Must match your chosen port:
#   - tls  = for port 587 (modern standard)
#   - ssl  = for port 465 (older standard)
# 
# Choose ONE protocol (must match SMTP_PORT above):
SMTP_SECURE=tls

# SMTP Authentication
# Your SMTP username (usually your full email address)
# Examples:
#   - noreply@yourdomain.com
#   - contact@company.de
#   - your-account@hosting-provider.com
SMTP_USER=noreply@yourdomain.com

# SMTP Password
# Your SMTP account password
# IMPORTANT: 
#   - For Gmail: Use an "App Password" (not your regular password)
#     Generate at: https://myaccount.google.com/apppasswords
#   - For Office365: May require app-specific password
#   - For most hosting: Your regular email password
# 
# Security: Use a strong password, never share this file!
SMTP_PASS=YourSecureSMTPPassword


# ----------------------------------------------------------------------------
# DASHBOARD AUTHENTICATION
# ----------------------------------------------------------------------------
# Credentials for accessing the dashboard at /assets/php/dashboard-login.php
# This dashboard allows you to view submissions, manage blocklists, and 
# monitor spam attempts.

# Dashboard Login Password
# Choose a STRONG password (recommended: 16+ characters, mixed case, numbers, symbols)
# Bad examples: password123, admin, test
# Good examples: K9#mPq$7wX2nL5@vB8tR, Tr0ub4dor&3xK!9pLm
# 
# TIP: Generate secure password with: openssl rand -base64 16
DASHBOARD_PASSWORD=ChangeThisToASecurePassword

# Dashboard Secret Key (HMAC Token Signing)
# This is used to cryptographically sign authentication tokens
# MUST be at least 32 characters (44 recommended for base64)
# 
# GENERATE THIS KEY:
#   Linux/Mac:   openssl rand -base64 32
#   Windows:     Use an online generator at: https://generate-secret.vercel.app/32
#   Manual:      Type 32+ random characters (NOT recommended)
# 
# Example output: 7K9mL2pQ5nR8wX3vB6tY1uH4jG7fD0cE9sA2zW5xI=
# 
# CRITICAL: Never reuse this key across different installations!
DASHBOARD_SECRET=REPLACE_THIS_WITH_OPENSSL_RAND_BASE64_32_OUTPUT


# ----------------------------------------------------------------------------
# SECURITY CONFIGURATION (v2.0.0+)
# ----------------------------------------------------------------------------
# Security settings for the dashboard API and authentication
# ALL values are REQUIRED - no defaults in code!

# Allowed Origin for Dashboard API (CORS)
# Restricts API access to your own domain (prevents unauthorized data access)
# 
# ‚ö†Ô∏è REQUIRED! Application will fail without this.
# 
# SET THIS TO YOUR ACTUAL DOMAIN:
#   - Production: https://yourdomain.com
#   - Subdomain: https://contact.yourdomain.com
#   - Local dev: http://localhost:8080
# 
# IMPORTANT: 
#   - Must include protocol (http:// or https://)
#   - No trailing slash
#   - Exact match required (www.domain.com ‚â† domain.com)
# 
# Example for production:
#   ALLOWED_ORIGIN="https://jozapf.de"
# 
# Example for local development:
#   ALLOWED_ORIGIN="http://localhost:8080"
# 
ALLOWED_ORIGIN="https://yourdomain.com"


# ----------------------------------------------------------------------------
# CRONJOB CONFIGURATION (v3.0.0+) üÜï
# ----------------------------------------------------------------------------
# Path configuration for GDPR-compliant log anonymization cronjob
# These paths tell the cronjob where to find your project files
# 
# WHY IN .ENV?
# - Keeps code generic and GitHub-ready
# - Central configuration in one place
# - Easy deployment across different servers
# - Follows 12-Factor App principles

# Public HTML / Webroot Directory (Absolute Path)
# This is the root directory where your website files are located
# The cronjob uses this to navigate to your project
# 
# HOW TO FIND YOUR PATH:
#   SSH/Terminal:  pwd (when in your webroot)
#   FTP/FileZilla: Check the path shown in the address bar
#   cPanel:        Usually shown in File Manager
# 
# COMMON STRUCTURES:
#   Shared hosting (cPanel):  /home/username/public_html
#   Shared hosting (Plesk):   /var/www/vhosts/yourdomain.com/httpdocs
#   VPS/Dedicated:            /var/www/html
#   Hetzner (your setup):     /usr/home/users/public_html
#   Alternative:              /usr/www/users/username
# 
# EXAMPLE:
#   CRON_PUBLIC_HTML=/usr/home/users/public_html
# 
# ‚ö†Ô∏è IMPORTANT:
#   - Use absolute path (starts with /)
#   - No trailing slash
#   - Must be writable by the cronjob user
# 
CRON_PUBLIC_HTML=/path/to/your/webroot

# Project Folder Name (Relative to PUBLIC_HTML)
# The folder containing your ContactForm project
# This is the directory name inside your PUBLIC_HTML
# 
# STRUCTURE:
#   PUBLIC_HTML/
#   ‚îî‚îÄ‚îÄ [PROJECT_NAME]/              <- This folder name
#       ‚îú‚îÄ‚îÄ index.html
#       ‚îî‚îÄ‚îÄ assets/
#           ‚îî‚îÄ‚îÄ php/
#               ‚îú‚îÄ‚îÄ ExtendedLogger.php
#               ‚îî‚îÄ‚îÄ logs/
# 
# EXAMPLES:
#   PROJECT_NAME=jozapf-de           (single site)
#   PROJECT_NAME=contact-form        (subfolder)
#   PROJECT_NAME=website             (generic name)
# 
# SPECIAL CASES:
#   - If project is directly in webroot (no subfolder):
#     Leave empty or set to "." 
#     PROJECT_NAME=.
# 
# EXAMPLE:
#   PROJECT_NAME=jozapf-de
# 
PROJECT_NAME=your-project-name

# Optional: Retention Period (Days)
# How many days to keep full IP addresses before anonymization
# Default: 14 days (GDPR-compliant for legitimate interest)
# 
# LEGAL CONSIDERATIONS:
#   - 14 days: Standard for spam protection (recommended)
#   - 7 days: Stricter data minimization
#   - 30 days: Extended analysis period (requires justification)
# 
# NOTE: Changing this requires updating ExtendedLogger.php
#       or using $logger->setRetentionDays() in the cronjob
# 
# RETENTION_DAYS=14


# ============================================================================
# CONFIGURATION COMPLETE!
# ============================================================================
# 
# Next Steps:
# 1. Save this file as .env.prod (NOT .env.prod.example.v3)
# 2. Test your SMTP settings by submitting the contact form
# 3. Check that emails arrive at RECIPIENT_EMAIL
# 4. Login to dashboard to verify everything works
# 5. Test cronjob: php /path/to/cron/contactform/anonymize-logs.php
# 6. Set up cronjob in your hosting control panel (see cron/README.md)
# 
# Troubleshooting:
# - Emails not sending? Check SMTP credentials and port/security combination
# - Can't login to dashboard? Verify DASHBOARD_PASSWORD is correct
# - Dashboard immediately logs out? Check DASHBOARD_SECRET is set correctly
# - API returns 401? Ensure you're logged in with valid dashboard token
# - CORS errors? Verify ALLOWED_ORIGIN matches your domain exactly
# - Cronjob fails? Check CRON_PUBLIC_HTML and PROJECT_NAME are correct
# - Path not found? Run: ls -la /your/path/to/verify/it/exists
# 
# For detailed documentation, see: 
#   - Main project: Documentation/
#   - Cronjob setup: cron/README.md
# 
# ============================================================================

# ============================================================================
# VERSION HISTORY
# ============================================================================
# 
# v3.0.0 (2025-10-06) - Cronjob Configuration
#   - Added CRON_PUBLIC_HTML for webroot path
#   - Added PROJECT_NAME for project folder
#   - Added optional RETENTION_DAYS setting
#   - Centralized all configuration in .env
# 
# v2.0.0 (2025-10-05) - Security Enhancement
#   - Added ALLOWED_ORIGIN for CORS security
#   - Improved documentation
# 
# v1.0.0 (2025-10-04) - Initial Release
#   - Basic SMTP and dashboard configuration
# 
# ============================================================================
